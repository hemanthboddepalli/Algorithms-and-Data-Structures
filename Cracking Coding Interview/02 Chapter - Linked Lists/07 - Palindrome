import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

// Palindrome - Cracking coding Interview.
class Node{
    int data;
    Node next=null;
    public Node(int d){
        this.data = d;
    }
    public void appendToTail(int d){
        Node newNode = new Node(d);
        Node head = this;
        while(head.next!=null){
            head = head.next;
        }
        head.next = newNode;
    }
    public void iterate(Node node){
        Node head = node;
        while(head!=null){
            System.out.print(head.data+"-->");
            head = head.next;
        }
        System.out.print("null");
        System.out.println();
    }
    public int length(Node node){
        Node head = node;
        int count = 0;
        while(head!=null){
            count +=1;
            head = head.next;
        }
        return count;
    }

    public void palindrome(Node head){
        int len = length(head);
        Stack<Integer> st = new Stack<Integer>();
        int count = 0;
        while(count != len/2){
            st.push(head.data);
            head = head.next;
            count++;
        }

        if(len%2==1){
            head = head.next;
        }

        while(!st.isEmpty()){
            if(st.pop()!=head.data){
                System.out.println("It's not a palindrome");
                return;
            }
            head = head.next;
        }
        System.out.println("It's a palindrome");
    }

}

///  Palindrome
public class Solution {

    public static void main(String[] args) {
        Node head = new Node(0);
        Node n1 = new Node(1);
        head.next = n1;
        Node n2 = new Node(2);
        n1.next = n2;
        Node n3 = new Node(1);
        n2.next = n3;
        Node n4 = new Node(0);
        n3.next = n4;
        head.iterate(head);
        head.palindrome(head);
    }
}
